# # ===========================================================================#                             Flight History    # # ===========================================================================# # The function takes FlightAware username, password, # # and list of Aircraft tail numbers.# # The function returns a Pandas Dataframe and a cvs file. # # All information retrieve from https://flightaware.com/def flight_history(username, password, tails):    # load packages    from http.cookiejar import CookieJar    from bs4 import BeautifulSoup as soup    import pandas as pd    import mechanize        # Browser    br = mechanize.Browser()    # Cookie Jar    cj = CookieJar()    br.set_cookiejar(cj)    # Browser options    br.set_handle_equiv(True)    br.set_handle_gzip(True)    br.set_handle_redirect(True)    br.set_handle_referer(True)    br.set_handle_robots(False)    br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)    br.addheaders = [('User-agent', 'Chrome')]    # The site we will navigate into, handling it's session    br.open('https://flightaware.com/account/session')    # View available forms#     for f in br.forms():#         print (f)    # Select the second (index one) form (the first form is a search query box)    br.select_form(nr=7)    # User credentials    br.form["flightaware_username"] = username    br.form['flightaware_password'] = password    # Login    br.submit()        # create containers    tail_number = []    date = []    aircraft = []    origin = []    origin_location = []    destination = []    destination_location = []    departure = []    arrival = []    duration = []        # loop a list of tail numbers and scrape information    for t in tails:        url = 'https://flightaware.com/live/flight/' + t + '/history/1280'        page_html = br.open(url).read()        page_soup = soup(page_html, 'html.parser')        table = page_soup.findAll("tr", {"class":["smallActiverow1 rowClickTarget", "smallActiverow2 rowClickTarget"]})            for i in range(0,len(table)):            print(t)            tail_number += [t]            date += table[i].find_all("td")[0].a            aircraft += [table[i].find_all("td")[1].text]            origin += [table[i].find_all("td")[2].text]            if len(table[i].find_all("td")[2].text) != 0:                origin_location += [table[i].find_all("td")[2].span['title']]            else:                origin_location += ["Unknown"]            destination += [table[i].find_all("td")[3].text]            if len(table[i].find_all("td")[3].text) != 0:                destination_location += [table[i].find_all("td")[3].span['title']]            else:                destination_location += ["Unknown"]            departure += [table[i].find_all("td")[4].text]            arrival += [table[i].find_all("td")[5].text]            duration += [table[i].find_all("td")[6].text]          # concatenate containers to the Pandas DataFrame            flight_data = pd.DataFrame(list(zip(tail_number, date, aircraft, origin, origin_location, destination, destination_location, departure, arrival, duration)),                         columns=['tail_number','date', 'aircraft', 'origin', 'origin_location', 'destination', 'destination_location', 'departure', 'arrival', 'duration'])         # export data as csv file    flight_data.to_csv('flight_history01.csv', index=False)        # return Pandas DataFrame    return(flight_data)